apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ../kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: django
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: django
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ../kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: django
    spec:
      containers:
      - args:
        - sh
        - -c
        - |-
          python /app/manage.py makemigrations &&
                 python /app/manage.py migrate &&
                 gunicorn canchas.wsgi:application --bind 0.0.0.0:8000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: envs-django
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: envs-postgres
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: envs-postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: envs-postgres
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: envs-postgres
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: envs-postgres
        - name: REDIS_BROKER
          valueFrom:
            configMapKeyRef:
              key: REDIS_BROKER
              name: envs-django
        image: django
        imagePullPolicy: ""
        name: django
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /app
          name: django-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: django-claim0
        persistentVolumeClaim:
          claimName: django-claim0
status: {}
